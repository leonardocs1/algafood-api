[33m7e66d9e[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m 2.27. Alterando a configura√ß√£o do projeto dependendo do ambiente (com Spring Profiles)
[33me61491d[m 2.26. Acessando propriedades com @ConfigurationProperties
[33mea666ee[m 2.25 Criando e acessando propriedades customizadas com @Value
[33mbd995dc[m 2.22 Publicando e consumindo eventos customizados
[33mfe51cce[m 2.21. Criando m√©todos de callback do ciclo de vida dos beans
[33m10624e9[m 2.20. Mudando o comportamento da aplica√ß√£o com Spring Profiles
[33m7720b2a[m 2.19 Desambigua√ß√£o de beans com anota√ß√£o customizada
[33m62c8664[m 2.18. Desambigua√ß√£o de beans com @Qualifier
[33m0d940f7[m[33m ([m[1;31morigin/main[m[33m)[m 2.17. Desambigua√ß√£o de beans com @Primary
[33m3b3a09c[m 2.16. Ambiguidade de beans e inje√ß√£o de lista de beans
[33m724b119[m 2.15. Depend√™ncia opcional com @Autowired
[33mfd43d06[m 2.14 Conhecendo os pontos de inje√ß√£o e a anota√ß√£o @Autowired
[33m6c1fd3c[m 2.13. Usando @Configuration e @Bean para definir beans
[33mc613506[m 2.12 Injetando depend√™ncias (beans Spring)
[33m77c87c1[m 2.7. Criando um controller com Spring MVC
[33m236ff4f[m 2.5 Criando um projeto Spring Boot com Spring initializr
